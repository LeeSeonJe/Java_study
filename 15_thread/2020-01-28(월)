2020.01.28 월요일 수업

 - 스레드 컨트롤
 	실행 중인 스레드의 상태를 제어하기 위한 것으로 효율적이고 
 	정교한 스케줄링을 위한 스레드 상태를 제어하는 기능

 - 네트워크 
 	여러 대의 컴퓨터를 통신 회선으로 연결한 것
 	(홈 네트워크, 지역 네트워크, 인터넷 등이 해당)
 	
 - 서버와 클라이언트
 	네트워크로 연결된 컴퓨터간의 관계를 역할(role)로 구분한 개념
 	 - 서버 : 서비스를 제공하는 프로그램으로 클라이언트의 연결을 수락하고 요청 내용을 처리 후 응답을 보내는 역할
 	 - 클라이언트  : 서비스를 받는 프로그램으로 네트워크 데이터를 필요로 하는 모든 어플리케이션이 해당 됨
 	
 - IP주소
 	네트워크 상에서 컴퓨터를 식별하는 번호로 네트워크 어댑터(랜카드) 마다 할당 되어 있음
 	
 - 포트(Port)
 	같은 컴퓨터 내에서 프로그램을 식별하는 번호로 
 	클라이언트는 서버 연결 요청 시 IP주소와 포트 번호를 알아야함
 	
 	
 - 명령프롬프트 명령어
 	path 명령어 : 환경변수의 path 설정값 보여주는 명령어
 	ipconfig  : 컴퓨터 tcp/ip를 보여주는 명령어
 	cd(change directory) : 현재 디렉토리 위치를 보여줌
 	cd(change directory) 디렉토리명 : 폴더변경 
 	dir : 현재 디렉토리에 있는 하위 디렉토리 목록을 보여줌
 	cls : clear
 	
 - 소켓 프로그래밍
 	소켓 - 프로세스 간의 통신에 사용되는 "양쪽 끝 단"
 	TCP - 데이터 전송 속도가 느리지만 정확하고 안정적으로 전달할 수 있는 연결 지향적 프로토콜 1:1
 	UDP - 데이터 전송 속도가 빠르지만 신뢰성 없는 데이터를 전송하는 비연결 지향적 프로토콜 1:N
 	
 	
 - TCP 소켓 프로그래밍
 	클라이언트와 서버간의 1:1 소켓 통신
 	서버가 먼저 실행되어 클라이언트의 요청을 기다려야 하고
 	서버용 프로그램과 클라이언트용 프로그램을 따로 구현해야 함
 				
 				클라이언트 							서버
 									포트번호 5001
 				 Socket ------------------->   Server Socket	응답대기상태에서 클라이언트 요청시 accept()로 수락
 					ㅣ																↓		
 					ㅣ																↓
 					ㅣ<-------------------->    Client Socket				클라이언트소켓 객체생성
    						   	통신			 
 				 
 				 
 - 서버용 TCP 소켓 프로그래밍 순서
 	1. 서버의 포트번호 정함 (포트번호 NNNN)
 	2. 서버용 소켓 객체 생성 (ServerSocket)
 	3. 클라이언트 쪽에서 접속 요청이 오길 기다림
 	4. 접속 요청이 오면 요청 수락(accept()를 통해서) 후 해당 클라이언트에 대한 소켓 객체(Socket) 생성
 	5. 연결된 클라이언트와 입출력 스트림 생성
 	6. 보조 스트림을 통해 성능 개선
 	7. 스트림을 통해 읽고 쓰기
 	8. 통신 종료
 	
 - 클라이언트용 TCP 소켓 프로그래밍 순서
 	1. 서버의 IP주소와 서버가 정한 포트번호를 매개변수로 하여 클라이언트용 소켓 객체 생성
 	2. 서버와 입출력 스트림 오픈
 	3. 보조 스트림을 통해 성능 개선
 	4. 스트림을 통해 읽고 쓰기
 	5. 통신 종료
 				          
 	