2019.01.10 금요일 수업

 - 다형성
 	"여러 개의 형태를 갖는다"는 의미
 	하나의 행동으로 여러 가지 일을 수행하는 개념
 
 - instanceof 
 	현재 참조형 변수가 어떤 클래스 형의 객체 주소를 참조하고 있는지 확인 할 때 
 	사용하는 연산자로 클래스 타입이 맞으면 true, 맞지 않으면 false 반환 
 	
 - 바인딩
 	실제 실행할 메소드 코드와 호출하는 코드를 연결 시키는 것
 	프로그램이 실행되기 전에 컴파일이 되면서 모든 메소드는 정적 바인딩 됨
 	
 	동적 바인딩
 		컴파일 시 정적 바인딩 된 메소드를 실행할 당시의 객체 타입을 기준으로 바인딩 되는 것
 		자식 객체를 통한 실행 시 후손 것이 우선권을 가짐
 		 - 성립요건
 		 	상속 관계로 이루어져 다형성이 적용된 경우, 메소드 오버라이딩이 되어 있으면
 		 	정적으로 바인딩 된 메소드 코드보다 오버라이딩 된 메소드 코드를 우선적으로 수행
 		 	
 - 추상 클래스
 	몸체 없는(미완성된) 메소드를 포함한 클래스
 	맴버(필드,메소드) 와 추상 메소드 모두를 상속하여 사용할 수 있을 때
 		 - 특징
 		 	1. 미완성된 클래스(abstract 키워드 사용)
 		 		자체적으로 객체 생성 불가 > 반드시 상속하여 객체 생성
 		 	2. abstract 메소드가 포함된 클래스는 반드시 abstract 클래스
 		 		abstract 메소드가 없어도 abstract 클래스 선언 가능
 		 	3. 클래스 내에 일반 변수, 메소드 포함 가능
 		 	4. 객체 생성은 안되지만 참조형 변수 타입으로는 사용 가능
 
 - 추상 메소드
 	몸체 없는(미완성된) 메소드
 	추상 메소드의 선언부에 abstract 키워드 사용
 	"상속" 시 반드시 구현해야 하는, "오버라이딩"이 강제화되는 메소드
 	
 - 인터페이스
 	추상클래스보다 더 엄격 ==> 추상 클래스처럼 일반 변수, 메소드가 들어가지 못하고 추상 메소드만 들어갈 수 있기 때문에
 	[public abstract] 반환자료형 메소드명([자료형 매개변수]);  ([]=생략기호)
 	 - 특징
 	 	1. 모든 인터페이스의 메소드는 묵시적으로 public 이고 abstract
 	 	2. 변수는 묵시적으로 public static final, ==> 클래스명.변수 이기 때문에 다중 상속가능
 	 		따라서 인터페이스 변수의 값 변경 시도 시 컴퍼일 에러 발생
 	 	3. 객체 생성은 안되나 참조형 변수로는 가능
 