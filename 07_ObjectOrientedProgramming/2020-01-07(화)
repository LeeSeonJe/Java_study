2019.01.07 화요일 수업

 - 생성자
 	new 연산자를 통해 Heap영역에 객체를 만들어 주는 것. ==> 객체생성
 	생성자도 일종의 메소드
 	필드 초기화 ==> 매개변수가 있는 생성자가 함
 	단, 기본 생성자를 작성하지 않은 경우, 클래스 사용 시 JVM이 자동으로 기본 생성자 생성
 	
 	 - 생성자 규칙
 	 	생성자의 선언은 메소드 서언과 유사하나 반환 값이 없으며
 	 	"생성자명을 클래스명과 똑같이 지정해주어야 함"
 	 	
 	 - 생성자 표현식
 	 	[접근제한자] [예약어] class 클래스명 {
 	 		// 기본 생성자
 	 		[접근제한자] 클래스명(==생성자명)() {}
 	 		
 	 		// 매개변수 있는 생성자
 	 		[접근제한자] 클래스명(==생성자명)(매개변수) { (this.)필드명  = 매개변수; }
 	 	}
 	 	
 - 오버로딩
 	같은 클래스 내에 동일한 이름의 메소드를 여러 개 작성하는 기법
 	 - 오버로딩 조건
 	 	같은 메소드 이름
 	 	다른 매개변수의 "개수" 또는 다른 매개변수 "타입" 또는 매개변수의 "순서"
 	 	
 - this 
 	모든 인스턴스 메소드에 숨겨진 채 존재하는 레퍼런스로 "할당된 객체를 가리킴" 
 	함수 실생 시 전달되는 객체의 주소를 자동으로 받음
 	
 - this()
 	생성자, 같은 클래스의 다른 생성자를 호출할 때 사용하며 반드시 첫 줄에 선언
 	
 - 메소드
 	수학의 함수와 비슷하며 호출을 통해 사용
 	전달 값이 없는 상태로 호출하거나 어떤 값을 전달하여 호출
 	함수 내에 작성된 연산 수행 후 반환 값/결과 값은 있거나 없을 수 있음
 	 - 메소드 표현식
 	 	[접근제한자][예약어] 반환형 메소드명 ([매개변수]) {
 	 		// 기능 정의
 	 	}
 	
 - 메소드 반환형
 	 - void 
 		반환형이 없음을 의미, 반환 값이 없을 경우 반드시 작성 ==> 나를 호출해준 곳에 보내줄 값이 없음
 	 - 기본 자료형
 	 	연산 수행 후 반환 값이 기본 자료형일 경우 사용
 	 - 배열
 	 	연산 수행후 반환 값이 배열인 경우 배열의 주소값이 반환
 	 - 클래스
 	 	연산 수행후 반환 값이 해당 클래스 타입의 객체일 경우
		해당 객체의 주소값이 반환 (클래스 == 타입)
		
 - 메소드 매개변수
 	 - () 
 	 	매개변수가 없는 것을 의미
 	 - 기본 자료형
 	 	기본형 매개변수 사용 시 값을 복사하여 전달
 	 	매개변수 값을 변경하여도 본래 값은 변경되지 않음
 	 - 배열, 클래스
 	 	배열, 클래스 등 참조형을 매개변수로 전달 시에는 
 	 	데이터의 주소 값을 전달하기 때문에 매개변수를 수정하면
 	 	본래의 데이터가 수정됨(얕은 복사)
 	 - 가변인자
 	 	매개변수의 개수를 유동적으로 설정하는 방법으로
 	 	가변 매개변수 외 다른 매개변수가 있으면 가변 매개변수를 마지막에 설정 
 	 	*방법 : (자료형....변수명) 
 	 	
 	 	
 	 	