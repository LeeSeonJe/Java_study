32019.01.09 목요일 수업

 - 상속
 	부모 클래스가 가지고 있는 맴버(필드와 메소드)를 자식클래스가 그대로 가져다 쓰는 것
 	 - 상속의 장점
 	 	1. 보다 적은 양의 코드로 새로운 클래스 작성 가능
 	 	2. 코드를 공통적으로 관리하기 때문에 코드의 추가 및 변경 용이
 	 	3. 코드의 중복을 제거하여 프로그래므이 생산성/유지보스에 크게 기여
 	 	
 	상속의 특징
 		1. 모든 클래스는 Object클래스의 후손
 		2. 부모클래스의 생성자, 초기화 블록은 상속 안됨
 		3. 부모의 private멤버는 상속은 되지만 직접 접근 불가
 		
 	[접근제한자] class 자식클래스명 extends 부모클래스명 {}
 	
 	super()와 super.
 	super() 생성자 = 부모의 생성자
 	super. 레퍼런스 = 부모의 주소값
 	
 - 오버라이딩
 	메소드 재정의, 메소드 재작성
 	기본적으로 상속이 되어있어야 오버라이딩이 가능하다.
 	모든 클래스는 Object클래스를 상속받는다.
 	표기법 Annotation, @Override
 	 
 	 - final 쿨래스(extends) ==> 상속 불가능
 	 	상속이 불가능한 클래스 
 	 
 	 - final 메소드 ==> 오버라이딩 불가능
 	 	상속 시 오버라이딩이 불가능한 메소드
 	 	
 	 ==================================================
 	 =	 대상	  =			사용 가능한 제어자/예약어			  =
 	 ==================================================
 	 =	클래스    =	public, (default), final, abstract	  =
 	 =	메소드    = 모든 젭근 제어자, final, abstract, static	  =
 	 =	변수	  = 모든 접근 제어자, final, static			  =
 	 =	지역변수 = 	final								  =
 	 ==================================================
 	 
 	 Object toString() 오버라이딩 ==> 객체가 가지고 있는 대표값(주소값) 반환 
 	 